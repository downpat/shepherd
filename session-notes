session 1
  started ~11:45am on 2025-7-13
  worked with Claude to pick out dependencies
  designed the repo structure
  built a hello world using the dependencies and a dockerfile
  first commit ~3:05pm
  setup the UI for the first introduction to the app
  finished @ 4:05

  next session
    add "git" to Claude's docker image

session 2
  started @ 1:30pm on 2025-7-14
  finished @ 3:30pm on 2025-7-14
  session plan:
    remove the dollar sign from the prompt
    switch to a white background with dark blue text and font
    create a component that takes a string and animates the typing like in the intro
      also type: title, subtitle, paragraph
    replace the fade in subtitle with the same animating text

  next session
    add git to Claude's docker image
    design the data model
    create components for each model
    setup routing
    try to be ready to start on backend by end of session

session 3
  started ~4:30pm on 2025-7-15
  stopped ~5:45pm for Brooke and Zanious drama
  re-started at ~6:50pm
  finished @ 7:16pm

  session plan:
    add git to Claude's docker image
    get the intro working again with the new animation component

  next session
    design the data model
    create components for each model
    setup routing
    try to be ready to start on backend by end of session

session 4
  started @ 5:24pm on 2025-7-17
  stopped @ 7:32pm

  session plan
    design the data model

  next session
    implement business entities in new architecture
    create components for each entity
    setup routing
    try to be ready to start on backend by end of session

session 5
  started @ 4:20pm (lol) on 2025-7-18
  finished @ 6:25pm
    
  session plan
    implement business entities in new architecture
    setup routing
    try to be ready to start on backend by end of session

  next session
    consider a pixel art/Natsume style logo with a shepherd watching sheep jump over a fence
    create dreams page for landing point after user creates their first dream
    create vertical slices in architecture for each entity

session 6
  started @ 1:09pm on 2025-7-19

  session plan
    consider a pixel art/Natsume style logo with a shepherd watching sheep jump over a fence
      we haven't done enough marketing yet
      I definitely like the concept of shepherds, sheep, counting sheep, and dreams, but
        I have to spend some time considering how to implement that while inspiring
        our target audience and establishing the best brand that serves the project
    code review of recent changes
      change "dream/new" route to just "dream/<slug>" or "dream/"
        need to consider difference between editing/creating, which at the moment there might not
          be, because there's not way to get to the dream editor without a slug
      let's try to stick to a strict 79 character line length
        problem with const strings
        problem with className property
      One of the problems we had with the intro is that we were passing anonymous functions
        defined in the JSX part of the component function to the onComplete property of
        the AnimatedText component. This meant the AnimatedText component was getting
        a brand new function every time the Intro component rendered, which meant the
        AnimatedText child components were re-running their useEffect functions everytime
        because the dependency for the useEffect was getting a new callback function. When
        we moved the callback definitions out of the JSX and declared them as javascript
        constants the AnimatedText components only needed to call useEffect once, because
        the dependencies were no longer changing
      questions for claude
        I don't like the dream/new route. A dream should always be dream/<slug>
        What does the AnimatePresence component do? How does the "mode" affect it?
        What does the motion.div component do? What features of motion.div does DreamShepherd rely on?
        Explain RE in generateSlugFromTitle in domain/Dream.js
        Discuss the service pattern in general and some resources that describe it, what the state of
          pattern is in modern development, and why it's useful to DreamShepherd's Implied Clean Architecture
        Explain the sort on getAllDreams in the services/DreamService.js
        How are the listeners in the DreamService going to be populated? Where is subscribe going to run?
      consider having Claude read changes and try to extract rules
        have Claude make a rule to refer to the user as the Dreamer
        don't commit changes, have Claude look at the active diff
        remind him to ignore this file
      code should be grouped by relevance and then alphabetically
      changed isDreamComplete function in Dream.js to isDreamPopulated, so as to not confuse
        between a valid dream and a dream that has come true.
      changed updateDream to updateSingleDream in services/DreamService.js, had it use updateDream
        in domain/Dream.js, making it more DRY
      understood how singleton service is used in DreamService.js - one service for the whole app
    setup vim for javascript development

  next session
    start working on a ubiquitous UI element for the shepherd
    not right now button
      they need to set aside focused time to work on their dream
      have the shepherd tell them to come back when they're ready
        after a cup of coffee, after a good workout, after a conversation with a trusted friend
    create dreams page for landing point after user creates their first dream
    update components/DreamEditor.jsx to use the services/DreamService
    create vertical slices in architecture for each entity
      make sure goals entity matches with assumptions of functions in Dream.js

session 7
  session shortened by a personal matter
  a few bug fixes and some thinking about how plans and goals related,
    but nothing more concrete than that

session 8
  started @ 1:36pm on 2025-7-24
  finished @ 3:43pm on 2025-7-24

  next session
    there's probably enough code here where I can start to code things myself
      asking Claude is fast, but the creative process might be hindered

session 9
  started @ 3:00pm on 2025-7-25
  called into work at 3:26pm
    sort of did half and half here
  re-started @ 4:13pm
  finished @ 5:58pm


  session plan
    decide what needs to be done to launch v1.0
      Dreamers can
        create a dream
        create an account
          login with google
          login with apple
          attach to an email
        create goals and attach them to the dream
        create a plan for a goal
        create tasks for a plan
        create sessions for a plan
      DreamShepherd can
        introduce the app
        guide the creation of dreams, goals and plan
        track stats necessary to achieve core features, like...
          elevate tasks to habits
      Other
        needs to work on desktops and phones
    architecture seems solid, we can cruise through upcoming
      changes because changing things should be straight-forward
    talk to Claude about plans that fail
    add addMissionVersion to Plan.js
  
  next session
    Get the UI working on mobile

session 10
  started @ 1:53pm on 2025-7-27
  finished @ 5:17pm on 2025-7-27

  session plan
    have claude remind me to pray
    mobile ui strategy
    mobile debugging
    router debugging for easy page reloading

  next session
    reminder at top of session to pray
    finish dream UI
      get the editor right
        ask Claude for the web editors out there
      goal slot on the right
      cards for each goal fill the slot
      goal creation has it's own page
    finish goal UI
      back to dream action is essential
    start plan UI
      back to goal action is essential
      sub-elements of a plan do not get their own pages, too disposable
      drawers for session, tasks, habits
        each has a calendar drawer that shrinks the session, task, habit UI down and allows drag and drop
        habits start empty (You have not created any habits yet)
        "Since last we talked, this is what you planned to do. Which were accomplished?"
      drawers for sessions, tasks, habits on the right
      drawer on the right for calendar to place tasks
    start Shepherd UI
      put him on the left

session 11
  started @ 2:23 on 2025-7-28
  finished ~5:00pm on 2025-7-28

  session plan
    pray
    defensive programming thoughts
    finish dream UI
      get the editor right
        ask Claude for the web editors out there
    elminate "starter-pack" colors, like on buttons
    setup full MERN app

  next session
    consider compose file
    finish dream ui
      goal slot on the right
      cards for each goal fill the slot
      goal creation has it's own page
    intro page
      enter button should submit input
    finish goal UI
      back to dream action is essential
    start plan UI
      back to goal action is essential
      sub-elements of a plan do not get their own pages, too disposable
      drawers for session, tasks, habits
        each has a calendar drawer that shrinks the session, task, habit UI down and allows drag and drop
        habits start empty (You have not created any habits yet)
        "Since last we talked, this is what you planned to do. Which were accomplished?"
      drawers for sessions, tasks, habits on the right
      drawer on the right for calendar to place tasks
    start Shepherd UI
      put him on the left

session 12
  started @ 12:56pm on 2025-7-29
  stopped @ 1:05pm for personal matter
  re-started @ 1:27pm
  finished @ 4:29pm

  session plan
    pray
    get svc running
      authentication
      models
      api controllers
    consider compose file
      not yet. setup is too simple at the moment

  next session
    pray
    finish debugging new endpoints with integration script
    Update API endpoints to make error handling more DRY
    Add boolean to DRY error handling so stack traces can be kept out or HTTP responses
    finish dream ui
      goal slot on the right
      cards for each goal fill the slot
      goal creation has it's own page
    intro page
      enter button should submit input
    finish goal UI
      back to dream action is essential
    start plan UI
      back to goal action is essential
      sub-elements of a plan do not get their own pages, too disposable
      drawers for session, tasks, habits
        each has a calendar drawer that shrinks the session, task, habit UI down and allows drag and drop
        habits start empty (You have not created any habits yet)
        "Since last we talked, this is what you planned to do. Which were accomplished?"
      drawers for sessions, tasks, habits on the right
      drawer on the right for calendar to place tasks
    start Shepherd UI
      put him on the left

session 13
  started @ 10:23am on 2025-7-30

  this was a weird session, internet was buggy,
  i did a bunch of other things at the same time
  it's not really a clean example of work session

  finished @ 2:54pm
  restarted @ ~6:00pm
  finished @ 7:11pm

  I finished debugging the API
  I also put together a plan for setting up auth on the frontend
  In the next session we need to make sure Claude doesn't make
    a wonky Dreamer model. It needs to have decent architecture
    like the other models. This one was so weird I had to
    shut down because I was too tired to be critical of something
    so unfamiliar.

  session plan
    pray
    finish debugging new endpoints with integration script

session 14
  started @ 5:02pm on 2025-7-31
  stopped @ 9:09pm on 2025-7-31

  another weird session
  there were some questions that Claude simply could not answer, so I was on my own
  it looks like in this phase I'm going to have to think through some of the problems
  once I come to a conclusion, I need to figure out how to guide claude to solve them
  this is in contrast to the beginning of this project when I knew all the answers so
    I could tell Claude exactly what to do
  now that we're starting to get into the unknowns, Claude doesn't have the same
    guardrails and he's getting a little nutty
  one of the issues is that the only way for me to really think through all the problems
    is to code them, so that takes time
  thus, this was a four hour session (with some breaks to feed the cats and take phone
    calls) but not much code was written, as compared to sessions when I know what to
    do and I can have Claude write it quickly

  session plan
    pray
    write a javascript model for the dreamer
    write a dreamerservice that helps to handle auth
    finish dream ui
      goal slot on the right
      cards for each goal fill the slot
      goal creation has it's own page
    intro page
      enter button should submit input
    finish goal UI
      back to dream action is essential
    start plan UI
      back to goal action is essential
      sub-elements of a plan do not get their own pages, too disposable
      drawers for session, tasks, habits
        each has a calendar drawer that shrinks the session, task, habit UI down and allows drag and drop
        habits start empty (You have not created any habits yet)
        "Since last we talked, this is what you planned to do. Which were accomplished?"
      drawers for sessions, tasks, habits on the right
      drawer on the right for calendar to place tasks
    start Shepherd UI
      put him on the left

  next session

  refactoring
    Update API endpoints to make error handling more DRY

session 15
  started @ 2:00pm on 2025-8-1
  finished @ 5:11pm on 2025-8-1

  Ok, we continued work on our introduction logic, so the use cases for
  the intial user experience are coming together. We have to guide the
  Dreamer from Anonymous state to either the Intro state or the Normal
  state, and the only way to do that was to start adding the Shepherd UI,
  so we have the first version of the Shepherd UI up and running. I still
  need to figure out how to send dynamic components to the Shepherd component
  so he can render contextual modals, and Claude seems a bit stumped with
  that one as well, but once we figure that out we should be ready to handle
  almost any UX case in DreamShepherd 1.0
